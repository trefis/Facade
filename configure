#!/bin/sh

BIN_DIR=/usr/local/bin

if ! [ -x $(which ocamlfind) ]; then
  echo "Ocamlfind is missing. Please install it."
  exit 1
fi

EXIT=0

COL_CLEAR=$(tput sgr0)
COL_RED=$(tput setf 4)
COL_GREEN=$(tput setf 2)

check_package()
{
  if ocamlfind query "$2" >/dev/null 2>/dev/null; then
    printf "${COL_GREEN}GOOD${COL_CLEAR}\tFound package $2\n"
  else
    printf "${COL_RED}BAD${COL_CLEAR}\t$2 is missing\n"
    eval $1=1
  fi
}

usage()
{
    cat <<EOF
Available options:
    -d (--dest) <dir>           Where to install the executable
                                Default = /usr/local/bin
EOF
}

while [ -n "$1" ]; do
  case "$1" in
    --dest|-d)
      shift 1
      BIN_DIR="$1"
      ;;
    --help|-help|-h)
      usage
      exit 0
  esac
  shift 1
done

cat <<EOF
Checking dependencies
---------------------

EOF

check_package EXIT core
check_package EXIT camomile
check_package EXIT lambda-term
check_package EXIT lwt
check_package EXIT yojson

if [ "$EXIT" -ne 0 ]; then
    cat<<EOF

Something bad happened.
Check your configuration and rerun this script before trying to 'make'.
EOF
    exit "$EXIT"
fi

cat <<EOF

You can know run the usual:

    $ make
    $ make install

EOF

echo >Makefile.config "BIN_DIR=$BIN_DIR"
